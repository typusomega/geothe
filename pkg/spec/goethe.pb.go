// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/v1/goethe.proto

package spec

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cursor struct {
	Topic                *Topic   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	ServiceId            string   `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	CurrentEvent         *Event   `protobuf:"bytes,3,opt,name=current_event,json=currentEvent,proto3" json:"current_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cursor) Reset()         { *m = Cursor{} }
func (m *Cursor) String() string { return proto.CompactTextString(m) }
func (*Cursor) ProtoMessage()    {}
func (*Cursor) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e567c1cdd9caf08, []int{0}
}

func (m *Cursor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cursor.Unmarshal(m, b)
}
func (m *Cursor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cursor.Marshal(b, m, deterministic)
}
func (m *Cursor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cursor.Merge(m, src)
}
func (m *Cursor) XXX_Size() int {
	return xxx_messageInfo_Cursor.Size(m)
}
func (m *Cursor) XXX_DiscardUnknown() {
	xxx_messageInfo_Cursor.DiscardUnknown(m)
}

var xxx_messageInfo_Cursor proto.InternalMessageInfo

func (m *Cursor) GetTopic() *Topic {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Cursor) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *Cursor) GetCurrentEvent() *Event {
	if m != nil {
		return m.CurrentEvent
	}
	return nil
}

type Event struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Topic                *Topic   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e567c1cdd9caf08, []int{1}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetTopic() *Topic {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Event) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Topic struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Topic) Reset()         { *m = Topic{} }
func (m *Topic) String() string { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()    {}
func (*Topic) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e567c1cdd9caf08, []int{2}
}

func (m *Topic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Topic.Unmarshal(m, b)
}
func (m *Topic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Topic.Marshal(b, m, deterministic)
}
func (m *Topic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Topic.Merge(m, src)
}
func (m *Topic) XXX_Size() int {
	return xxx_messageInfo_Topic.Size(m)
}
func (m *Topic) XXX_DiscardUnknown() {
	xxx_messageInfo_Topic.DiscardUnknown(m)
}

var xxx_messageInfo_Topic proto.InternalMessageInfo

func (m *Topic) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Cursor)(nil), "io.typusomega.goethe.Cursor")
	proto.RegisterType((*Event)(nil), "io.typusomega.goethe.Event")
	proto.RegisterType((*Topic)(nil), "io.typusomega.goethe.Topic")
}

func init() { proto.RegisterFile("protos/v1/goethe.proto", fileDescriptor_1e567c1cdd9caf08) }

var fileDescriptor_1e567c1cdd9caf08 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x5f, 0x4b, 0xf3, 0x30,
	0x14, 0xc6, 0xdf, 0xf4, 0x65, 0x2d, 0x3d, 0x4e, 0x2f, 0x82, 0x68, 0x99, 0x0a, 0xa3, 0x20, 0xf6,
	0x2a, 0x75, 0xf3, 0x0b, 0x88, 0x43, 0x64, 0x78, 0x23, 0xc5, 0x2b, 0x6f, 0x46, 0x97, 0x84, 0x2e,
	0x68, 0x9b, 0x90, 0x3f, 0x85, 0x7d, 0x17, 0x2f, 0xfc, 0xa8, 0xb2, 0xb4, 0x32, 0x90, 0x51, 0xbc,
	0xcb, 0x39, 0xcf, 0xef, 0x3c, 0x79, 0xe0, 0x1c, 0x38, 0x53, 0x5a, 0x5a, 0x69, 0xf2, 0x76, 0x96,
	0x57, 0x92, 0xdb, 0x0d, 0x27, 0xbe, 0x81, 0x4f, 0x85, 0x24, 0x76, 0xab, 0x9c, 0x91, 0x35, 0xaf,
	0x4a, 0xd2, 0x69, 0xe9, 0x27, 0x82, 0x70, 0xe1, 0xb4, 0x91, 0x1a, 0xcf, 0x60, 0x64, 0xa5, 0x12,
	0x34, 0x41, 0x53, 0x94, 0x1d, 0xcd, 0x2f, 0xc8, 0xa1, 0x01, 0xf2, 0xba, 0x43, 0x8a, 0x8e, 0xc4,
	0x57, 0x00, 0x86, 0xeb, 0x56, 0x50, 0xbe, 0x12, 0x2c, 0x09, 0xa6, 0x28, 0x8b, 0x8b, 0xb8, 0xef,
	0x2c, 0x19, 0xbe, 0x87, 0x63, 0xea, 0xb4, 0xe6, 0x8d, 0x5d, 0xf1, 0x96, 0x37, 0x36, 0xf9, 0x3f,
	0xe4, 0xfc, 0xb8, 0x43, 0x8a, 0x71, 0x3f, 0xe1, 0xab, 0x94, 0xc1, 0xc8, 0x3f, 0xf0, 0x09, 0x04,
	0x82, 0xf9, 0x64, 0x71, 0x11, 0x08, 0xb6, 0x0f, 0x1b, 0xfc, 0x39, 0x6c, 0x02, 0x91, 0x2a, 0xb7,
	0x1f, 0xb2, 0x64, 0x3e, 0xc7, 0xb8, 0xf8, 0x29, 0xd3, 0x73, 0x18, 0x79, 0xf2, 0xf7, 0x2f, 0xf3,
	0x2f, 0x04, 0xe1, 0x93, 0xb7, 0xc2, 0x4b, 0x88, 0x5e, 0xb4, 0x64, 0x8e, 0x72, 0x3c, 0x94, 0x7f,
	0x32, 0x24, 0xa6, 0xff, 0x32, 0x74, 0x8b, 0xf0, 0x33, 0x44, 0x0b, 0xd9, 0x18, 0x57, 0x73, 0x7c,
	0x79, 0x98, 0xee, 0x36, 0x32, 0x19, 0x54, 0x3b, 0xb3, 0x87, 0x9b, 0xb7, 0xeb, 0x4a, 0xd8, 0x8d,
	0x5b, 0x13, 0x2a, 0xeb, 0x7c, 0x0f, 0xf7, 0xcb, 0xcf, 0xd5, 0x7b, 0x95, 0x1b, 0xc5, 0xe9, 0x3a,
	0xf4, 0x67, 0x70, 0xf7, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x62, 0xfc, 0x69, 0x20, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoetheClient is the client API for Goethe service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoetheClient interface {
	Produce(ctx context.Context, opts ...grpc.CallOption) (Goethe_ProduceClient, error)
	Consume(ctx context.Context, opts ...grpc.CallOption) (Goethe_ConsumeClient, error)
}

type goetheClient struct {
	cc *grpc.ClientConn
}

func NewGoetheClient(cc *grpc.ClientConn) GoetheClient {
	return &goetheClient{cc}
}

func (c *goetheClient) Produce(ctx context.Context, opts ...grpc.CallOption) (Goethe_ProduceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Goethe_serviceDesc.Streams[0], "/io.typusomega.goethe.Goethe/Produce", opts...)
	if err != nil {
		return nil, err
	}
	x := &goetheProduceClient{stream}
	return x, nil
}

type Goethe_ProduceClient interface {
	Send(*Event) error
	Recv() (*Event, error)
	grpc.ClientStream
}

type goetheProduceClient struct {
	grpc.ClientStream
}

func (x *goetheProduceClient) Send(m *Event) error {
	return x.ClientStream.SendMsg(m)
}

func (x *goetheProduceClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *goetheClient) Consume(ctx context.Context, opts ...grpc.CallOption) (Goethe_ConsumeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Goethe_serviceDesc.Streams[1], "/io.typusomega.goethe.Goethe/Consume", opts...)
	if err != nil {
		return nil, err
	}
	x := &goetheConsumeClient{stream}
	return x, nil
}

type Goethe_ConsumeClient interface {
	Send(*Cursor) error
	Recv() (*Cursor, error)
	grpc.ClientStream
}

type goetheConsumeClient struct {
	grpc.ClientStream
}

func (x *goetheConsumeClient) Send(m *Cursor) error {
	return x.ClientStream.SendMsg(m)
}

func (x *goetheConsumeClient) Recv() (*Cursor, error) {
	m := new(Cursor)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GoetheServer is the server API for Goethe service.
type GoetheServer interface {
	Produce(Goethe_ProduceServer) error
	Consume(Goethe_ConsumeServer) error
}

// UnimplementedGoetheServer can be embedded to have forward compatible implementations.
type UnimplementedGoetheServer struct {
}

func (*UnimplementedGoetheServer) Produce(srv Goethe_ProduceServer) error {
	return status.Errorf(codes.Unimplemented, "method Produce not implemented")
}
func (*UnimplementedGoetheServer) Consume(srv Goethe_ConsumeServer) error {
	return status.Errorf(codes.Unimplemented, "method Consume not implemented")
}

func RegisterGoetheServer(s *grpc.Server, srv GoetheServer) {
	s.RegisterService(&_Goethe_serviceDesc, srv)
}

func _Goethe_Produce_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GoetheServer).Produce(&goetheProduceServer{stream})
}

type Goethe_ProduceServer interface {
	Send(*Event) error
	Recv() (*Event, error)
	grpc.ServerStream
}

type goetheProduceServer struct {
	grpc.ServerStream
}

func (x *goetheProduceServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func (x *goetheProduceServer) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Goethe_Consume_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GoetheServer).Consume(&goetheConsumeServer{stream})
}

type Goethe_ConsumeServer interface {
	Send(*Cursor) error
	Recv() (*Cursor, error)
	grpc.ServerStream
}

type goetheConsumeServer struct {
	grpc.ServerStream
}

func (x *goetheConsumeServer) Send(m *Cursor) error {
	return x.ServerStream.SendMsg(m)
}

func (x *goetheConsumeServer) Recv() (*Cursor, error) {
	m := new(Cursor)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Goethe_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.typusomega.goethe.Goethe",
	HandlerType: (*GoetheServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Produce",
			Handler:       _Goethe_Produce_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Consume",
			Handler:       _Goethe_Consume_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/v1/goethe.proto",
}
